#!/usr/bin/env bash

# Detect window manager
detect_wm() {
    if [[ -n "$HYPRLAND_INSTANCE_SIGNATURE" ]]; then
        echo "hyprland"
    elif pgrep -x bspwm > /dev/null; then
        echo "bspwm"
    else
        echo "unknown"
    fi
}

WM=$(detect_wm)

spaces_hyprland() {
    WORKSPACE_WINDOWS=$(hyprctl workspaces -j | jq 'map({key: .id | tostring, value: .windows}) | from_entries')
    seq 1 10 | jq --argjson windows "${WORKSPACE_WINDOWS}" --slurp -Mc 'map(tostring) | map({id: ., windows: ($windows[.]//0)})'
}

spaces_bspwm() {
    DESKTOP_INFO=$(bspc query -D --names)
    DESKTOP_WINDOWS=$(bspc query -D -d .occupied --names 2>/dev/null || echo "")
    
    echo "$DESKTOP_INFO" | head -10 | jq -R -s -c 'split("\n") | map(select(length > 0)) | to_entries | map({id: (.key + 1 | tostring), windows: (if .value as $desktop | $ARGS.positional | index($desktop) then 1 else 0 end)})' --args ${DESKTOP_WINDOWS}
}

spaces() {
    case "$WM" in
        "hyprland")
            spaces_hyprland
            ;;
        "bspwm")
            spaces_bspwm
            ;;
        *)
            echo "[]"
            ;;
    esac
}

monitor_changes() {
    case "$WM" in
        "hyprland")
            socat -u UNIX-CONNECT:$XDG_RUNTIME_DIR/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock - | while read -r line; do
                spaces
            done
            ;;
        "bspwm")
            bspc subscribe desktop node | while read -r line; do
                spaces
            done
            ;;
        *)
            while true; do
                sleep 2
                spaces
            done
            ;;
    esac
}

spaces

monitor_changes
